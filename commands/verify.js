// /commands/verify.js
const { SlashCommandBuilder, EmbedBuilder } = require('discord.js'); // ‚Äπ--- (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) Import EmbedBuilder
const { verifySlipFromImage } = require('../utils/slipok');
const { createSuccessEmbed, createErrorEmbed } = require('../utils/embeds');
const { getInGameName } = require('../utils/database');
const {
  RCON_CHANNEL_ID,
  POINT_RATE,
  ADMIN_LOG_CHANNEL_ID,
} = require('../config'); // ‚Äπ--- (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) Import POINT_RATE ‡πÅ‡∏•‡∏∞ ADMIN_LOG_CHANNEL_ID
const { logPurchase } = require('../utils/logger'); // <-- Import Logger

module.exports = {
  data: new SlashCommandBuilder()
    .setName('verify')
    .setDescription('‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô')
    .addAttachmentOption((option) =>
      option
        .setName('slip')
        .setDescription('‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô')
        .setRequired(true)
    ),

  async execute(interaction) {
    const attachment = interaction.options.getAttachment('slip');

    // --- ‡πÄ‡∏ä‡πá‡∏Å‡πÑ‡∏ü‡∏•‡πå ---
    if (
      !attachment.contentType ||
      !attachment.contentType.startsWith('image/')
    ) {
      await interaction.reply({
        content: '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (JPG, PNG, JPEG, WEBP)',
        ephemeral: true,
      });
      return;
    }

    // --- ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÅ‡∏ö‡∏ö‡∏•‡∏±‡∏ö (ephemeral) ‡πÄ‡∏™‡∏°‡∏≠ ---
    await interaction.deferReply({ ephemeral: true });

    // --- 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏•‡∏¥‡∏õ ---
    const result = await verifySlipFromImage(attachment.url, null);

    // --- 2. ‡∏ñ‡πâ‡∏≤‡∏™‡∏•‡∏¥‡∏õ‡∏ú‡πà‡∏≤‡∏ô (Success) ---
    if (result.success) {
      const slipData = result.data;
      const discordId = interaction.user.id;
      const amount = slipData.amount; // ‡∏î‡∏∂‡∏á‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏™‡∏•‡∏¥‡∏õ

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
      const embed = createSuccessEmbed(slipData);

      // --- 3. ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏Å‡∏°‡∏à‡∏≤‡∏Å DB ---
      const inGameName = await getInGameName(discordId);

      if (!inGameName) {
        // --- 3.1 ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô DB ---
        embed.addFields({
          name: '‚ö†Ô∏è ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô',
          value:
            '‡∏™‡∏•‡∏¥‡∏õ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ',
        });
      } else if (!amount || amount <= 0) {
        // --- 3.2 ‡∏™‡∏•‡∏¥‡∏õ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô (‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ) ---
        embed.addFields({
          name: '‚ö†Ô∏è ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô',
          value: `‡∏™‡∏•‡∏¥‡∏õ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ (‡∏¢‡∏≠‡∏î ${amount} ‡∏ö‡∏≤‡∏ó)`,
        });
      } else {
        // --- 3.3 ‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠ ‡πÅ‡∏•‡∏∞ ‡∏°‡∏µ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô -> ‡∏™‡πà‡∏á RCON ---
        try {
          const rconChannel = await interaction.client.channels.fetch(
            RCON_CHANNEL_ID
          );

          if (!rconChannel || !rconChannel.isTextBased()) {
            throw new Error('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á RCON ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏±‡πâ‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Text Channel');
          }

          // --- (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Point ---
          const bahtAmount = Math.floor(amount);
          const calculatedPoints = bahtAmount * POINT_RATE; // ‚Äπ--- ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì (‡πÄ‡∏ä‡πà‡∏ô 10 * 100 = 1000)

          // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á RCON (‡πÉ‡∏ä‡πâ calculatedPoints)
          const rconCommand = `!rcon coinsengine:point give ${inGameName} ${calculatedPoints}`;

          // ‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡πà‡∏≠‡∏á RCON
          await rconChannel.send(rconCommand);

          // (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) ‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ß‡πà‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡πÉ‡∏ä‡πâ calculatedPoints)
          embed.addFields({
            name: 'üí∏ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô',
            value: `‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡∏û‡πâ‡∏≠‡∏¢‡πÉ‡∏´‡πâ \`${inGameName}\` ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô \`${calculatedPoints.toLocaleString()}\` ‡∏û‡πâ‡∏≠‡∏¢ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!`,
          });

          // --- (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Log ‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠ (‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤ c·∫£ baht ‡πÅ‡∏•‡∏∞ points) ---
          try {
            await logPurchase(
              interaction.user,
              inGameName,
              bahtAmount,
              calculatedPoints
            );
          } catch (logError) {
            // ‡∏´‡∏≤‡∏Å Log ‡∏û‡∏±‡∏á ‡∏Å‡πá‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£ ‡∏≠‡∏¢‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
            console.error(
              '‚ùå (Logger) ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Log ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (‡πÅ‡∏ï‡πà‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à):',
              logError
            );
          }
          // --- ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Log ---

          // --- (‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà) ‡∏™‡πà‡∏á Log Embed ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡πâ‡∏≠‡∏á Admin ---
          if (ADMIN_LOG_CHANNEL_ID) {
            try {
              const adminLogChannel = await interaction.client.channels.fetch(
                ADMIN_LOG_CHANNEL_ID
              );
              if (adminLogChannel && adminLogChannel.isTextBased()) {
                const adminEmbed = new EmbedBuilder()
                  .setColor(0x57f287) // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
                  .setTitle('üìÑ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô (‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)')
                  .addFields(
                    {
                      name: 'üë§ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Discord',
                      value: `${interaction.user.tag} (\`${interaction.user.id}\`)`,
                      inline: false,
                    },
                    {
                      name: 'üéÆ ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏Å‡∏°',
                      value: `\`${inGameName}\``,
                      inline: false,
                    },
                    {
                      name: 'üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô (‡∏ö‡∏≤‡∏ó)',
                      value: `${bahtAmount} ‡∏ö‡∏≤‡∏ó`,
                      inline: true,
                    },
                    {
                      name: 'ü™ô ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (‡∏û‡πâ‡∏≠‡∏¢)',
                      value: `${calculatedPoints.toLocaleString()} ‡∏û‡πâ‡∏≠‡∏¢ (Rate: ${POINT_RATE}x)`,
                      inline: true,
                    }
                  )
                  .setTimestamp();
                await adminLogChannel.send({ embeds: [adminEmbed] });
              }
            } catch (adminLogError) {
              console.error(
                '‚ùå (Admin Log) ‡∏™‡πà‡∏á Embed ‡πÑ‡∏õ‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:',
                adminLogError
              );
            }
          }
          // --- ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á Log Admin ---
        } catch (error) {
          console.error('‚ùå (RCON) ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
          embed.addFields({
            name: 'üî• ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô',
            value: `‡∏™‡∏•‡∏¥‡∏õ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÅ‡∏ï‡πà‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡∏û‡πâ‡∏≠‡∏¢‡πÉ‡∏´‡πâ \`${inGameName}\` ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÇ‡∏î‡∏¢‡∏î‡πà‡∏ß‡∏ô!`,
          });
        }
      }

      // --- 4. ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡πÅ‡∏ö‡∏ö‡∏•‡∏±‡∏ö) ---
      await interaction.editReply({ embeds: [embed] });
    } else {
      // --- 5. ‡∏ñ‡πâ‡∏≤‡∏™‡∏•‡∏¥‡∏õ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (Error) ---
      const embed = createErrorEmbed(result.error.error || result.error);
      await interaction.editReply({ embeds: [embed] });
    }
  },
};


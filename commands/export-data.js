// /commands/export-data.js
const {
  SlashCommandBuilder,
  PermissionsBitField,
  AttachmentBuilder,
} = require('discord.js');
const { BOT_CONFIG, EXPORT_CHANNEL_ID } = require('../config');
const { getAllPlayers } = require('../utils/database');
const { Buffer } = require('node:buffer');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('export-data')
    .setDescription('‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)')
    .setDefaultMemberPermissions(PermissionsBitField.Flags.Administrator),

  async execute(interaction) {
    if (!interaction.member.permissions.has(PermissionsBitField.Flags.Administrator)) {
      return interaction.reply({
        content: '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ',
        ephemeral: true,
      });
    }

    await interaction.deferReply({ ephemeral: true });

    if (!EXPORT_CHANNEL_ID) {
      return interaction.editReply({
        content: '‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ `EXPORT_CHANNEL_ID` ‡πÉ‡∏ô .env',
      });
    }

    let targetChannel;
    try {
      targetChannel = await interaction.client.channels.fetch(EXPORT_CHANNEL_ID);
      if (!targetChannel || !targetChannel.isTextBased()) {
        throw new Error('ID ‡∏ä‡πà‡∏≠‡∏á ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Text Channel');
      }
    } catch (error) {
      return interaction.editReply({
        content: `‚ùå ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ \`EXPORT_CHANNEL_ID\` ‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`,
      });
    }

    // 1. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å DB
    const dbResult = await getAllPlayers();

    if (!dbResult.success) {
      return interaction.editReply({
        content: `‚ùå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• DB ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${dbResult.error}`,
      });
    }
    if (!dbResult.data || dbResult.data.length === 0) {
      return interaction.editReply({
        content: '‚ÑπÔ∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
      });
    }

    try {
      // 2. ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô JSON Buffer (‡πÑ‡∏ü‡∏•‡πå)
      const jsonData = JSON.stringify(dbResult.data, null, 2);
      const buffer = Buffer.from(jsonData, 'utf-8');

      // 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ô‡∏ö
      const attachment = new AttachmentBuilder(buffer, {
        name: 'player_data.export.json',
      });

      // 4. ‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡πÑ‡∏ß‡πâ
      await targetChannel.send({
        content: `üì¶ **Database Export**\n‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${
          dbResult.data.length
        } ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡∏™‡πà‡∏á‡πÇ‡∏î‡∏¢ ${interaction.user.tag})`,
        files: [attachment],
      });

      // 5. ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö (‡πÅ‡∏ö‡∏ö‡∏•‡∏±‡∏ö) ‡∏ß‡πà‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      await interaction.editReply({
        content: `‚úÖ ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ${dbResult.data.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á ${targetChannel.name} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`,
      });
    } catch (error) {
      console.error('‚ùå (Export) ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
      await interaction.editReply({
        content: `‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå: ${error.message}`,
      });
    }
  },
};